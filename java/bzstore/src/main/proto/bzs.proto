syntax = "proto3";

package protocol;

option java_package = "edu.ucsc.edgelab.db.bzs";

service BZStore {
    rpc Commit (Transaction) returns (TransactionResponse);
    rpc ROCommit (ROTransaction) returns (ROTransactionResponse);
    rpc ReadOperation (Read) returns (ReadResponse);
}

service Cluster {
    rpc CommitPrepare (Transaction) returns (TransactionResponse);
    rpc Commit (Transaction) returns (TransactionResponse);
    rpc ReadOperation (Read) returns (ReadResponse);
}

service Replica {
    rpc Forward (Transaction) returns (TransactionResponse);
    rpc ForwardROT (ROTransaction) returns (ROTransactionResponse);
    //rpc RetrievePublicSignatures (string) returns (string);    // Possible interface to retrieve digital signatures from nodes.
}

message TransactionBatch {
    repeated Transaction transactions = 1;
    repeated ROTransaction rotransaction = 2;
    //    BFTCommit bftCommit = 3;
    int32 ID = 3;
    Operation operation = 4;
}

message TransactionBatchResponse {
    repeated TransactionResponse responses = 1;
    repeated ROTransactionResponse readresponses = 2;
    //    BFTCommitResponse bftCommitResponse = 3;
    int32 ID = 3;
    Operation operation = 4;
}

message BFTCommit {
    repeated TransactionResponse transactions = 1;
    int32 ID = 2;
}
message BFTCommitResponse {
    repeated TransactionResponse responses = 1;
    int32 ID = 2;
}

enum TransactionStatus {
    COMMITTED = 0;
    ABORTED = 1;
    PREPARED = 2;
}

enum OperationStatus {
    FAILED = 0; // To be removed.
    SUCCESS = 1;
    INVALID = 2;
    COMMITTED = 3;
    ABORTED = 4;
    PREPARED = 5;
}

enum Operation {
    BFT_PREPARE = 0;
    BFT_COMMIT = 1;
}

message Write {
    string key = 1;
    string value = 2;
    int32 clusterID = 3;
    int32 replicaID = 4;
}

message WriteResponse {
    string key = 1;
    string value = 2;
    int64 version = 3;
    string responseDigest = 4;
    OperationStatus status = 5;
    int32 clusterID = 6;
    int32 replicaID = 7;
}

message Read {
    string key = 1;
    int32 clusterID = 2;
    int32 replicaID = 3;
}

message ReadResponse {
    string key = 1;
    string value = 2;
    int64 version = 3;
    string responseDigest = 4;
    OperationStatus status = 5;
    int32 clusterID = 6;
    int32 replicaID = 7;
}

message ReadHistory {
    string key = 1;
    string value = 2;
    int64 version = 3;
    string responseDigest = 4;
    int32 clusterID = 5;
    int32 replicaID = 6;
}

message ROTransaction {
    repeated Read readOperations = 1;
}

message ROTransactionResponse {
    TransactionStatus status = 1;
    repeated ReadResponse readResponses = 2;
}

message Transaction {
    repeated ReadHistory readHistory = 1;
    repeated Write writeOperations = 2;
    string transactionID = 3;
}

message TransactionResponse {
    TransactionStatus status = 1;
    repeated WriteResponse writeResponses = 2;
    string transactionID = 3;
}

message DBData {
    string value = 1;
    int64 version = 2;
}